<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhalj.emos.api.db.dao.TbUserDao">
  <select id="haveRootUser" resultType="boolean">
    select if(count(*),TRUE,FALSE) from tb_user where root = 1
  </select>

  <insert id="insert" parameterType="HashMap">
    insert into tb_user
    set
    <if test="openId!=null">
      open_id = #{openId},
    </if>
    <if test="nickname!=null">
      nickname = #{nickname},
    </if>
    <if test="photo!=null">
      photo = #{photo},
    </if>
    <if test="name!=null">
      name = #{name},
    </if>
    <if test="sex!=null">
      sex = #{sex},
    </if>
    <if test="tel!=null">
      tel = #{tel},
    </if>
    <if test="email!=null">
      email = #{email},
    </if>
    <if test="hiredate!=null">
      hiredate = #{hiredate},
    </if>
        role = #{role},
        root = #{root},
    <if test="deptName!=null">
      dept_id = ( select id from tb_dept where dept_name = #{deptName} ),
    </if>
      status = #{status},
      create_time = #{createTime}
  </insert>

  <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
    select id from tb_user where open_id = #{openId} and status = 1
  </select>

  <select id="searchUserPermissions" parameterType="Integer" resultType="String">
    SELECT p.permission_name from tb_user u
        join tb_role r on json_contains(u.role,cast(r.id as char))
        join tb_permission p on json_contains(r.permissions,cast(p.id as char))
    where u.id = #{userId} and u.status = 1;
  </select>
  
  <select id="searchById" parameterType="int" resultType="com.lhalj.emos.api.db.pojo.TbUser">
    select id,open_id,nickname,photo,name,sex,tel,role,root,dept_id,status,create_time
    from tb_user where id = #{userId} and status=1;
  </select>
  
  <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
    select u.name, d.dept_name from tb_user u left join tb_dept d on u.dept_id = d.id where u.id = #{userId} and u.status = 1
  </select>

  <select id="searchUserHiredate" parameterType="int" resultType="String">
    select hiredate from tb_user where id = #{userId} and status = 1
  </select>

  <select id="searchUserSummary" parameterType="int" resultType="HashMap">
    select u.name,u.photo,d.dept_name as deptName from tb_user u left join tb_dept d on u.dept_id = d.id
    where u.id=#{userId} and u.status = 1
  </select>

  <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
    select d.id as deptId,d.dept_name as deptName,u.id as userId,u.name
    from tb_dept d join tb_user u ON u.dept_id = d.id and u.status = 1
    <if test="keyword!=null">
      where u.name like '%${keyword}%'
    </if>
    group by d.id,u.id
  </select>

  <select id="searchMembers" parameterType="list" resultType="HashMap">
    select id,name,photo from tb_user
    where status = 1 and id in
    <foreach collection="list" item="one" separator="," open="(" close=")">
      #{one}
    </foreach>
  </select>

  <select id="searchUserInfo" parameterType="int" resultType="HashMap">
    select u.open_id as openId,
           u.nickname,
           u.name,
           u.photo,
           u.sex,
           u.tel,
           u.email,
           d.dept_name as dept,
           u.hiredate,
           case u.status
                when 1 then "在职"
                when 2 then "离职"
                end as status,
                (select group_concat(role_name separator ",") from tb_role where json_contains
                (u.role,convert (id,char ))) as roles
                from tb_user u left join tb_dept d on u.dept_id = d.id
                where u.id = 15 and u.status = 1
                
  </select>
  
  <select id="searchDeptManagerId" parameterType="int" resultType="int">
    select u2.id
    from tb_user u1 join tb_user u2 on u1.dept_id = u2.dept_id
    join tb_role r on json_contains(u2.role,cast(r.id as char ))
    where u1.id=#{id} and r.id = 2 and u1.status = 1 and u2.status = 1
  </select>

  <select id="searchGmId" resultType="int">
    select u.id
    from tb_user u
    join tb_role r on json_contains(u.role,cast (r.id as char ))
    where r.id = 1 and u.status = 1
  </select>
  
  <select id="searchMeetingMembersInSameDept" parameterType="String" resultType="boolean">
    select if(count (distinct u.dept_id)=1,true,FALSE ) as bool
    from tb_meeting m
    join tb_user u on json_contains(m.members,cast (u.id as char ))
    where m.uuid = #{uuid} and u.status = 1
  </select>
</mapper>